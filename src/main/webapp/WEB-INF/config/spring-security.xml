<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
 
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
 		<intercept-url pattern="/login.sg" filters="none" />
 
 		<intercept-url pattern="/resources/**" filters="none"/>
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
 		<!-- <intercept-url pattern="/login.sg"/> -->
 		<!-- <intercept-url pattern="/forroles"
			access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" /> -->
 
		<form-login 
		    login-page="/login.sg" 
		    default-target-url="/home.sg" always-use-default-target="true"
			authentication-failure-url="/login.sg?error=true" />
		<logout invalidate-session="true" logout-success-url="/login.sg?logout=true" logout-url="/j_spring_security_logout"  />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403.html" />
	</http>
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select user_name,password, enabled from USERS where user_name=?"
		  authorities-by-username-query=
		    "select user_name, role from USER_ROLES where user_name=? " />
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>